name: Sync

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  Get_repo:
    runs-on: ubuntu-latest
    
    # --------------------------------------------------------
    # 修复 1: 增加 'actions: write' 权限
    permissions:
      contents: write  # 用于 git push
      actions: write   # 用于 delete-workflow-runs
    # --------------------------------------------------------

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # --------------------------------------------------------
    # 修复 2B: 重写此步骤以避免名称冲突
    - name: Get Source Packages into Temp Dir
      id: get_source
      run: |
        set -e # 任何命令失败立即退出
        TEMP_PACKAGE_DIR="/home/runner/temp_packages"
        mkdir -p "$TEMP_PACKAGE_DIR"
        cd "$TEMP_PACKAGE_DIR"
        echo "Working directory: $PWD"

        echo "Cloning luci-app-adguardhome..."
        git clone --depth=1 https://github.com/ThingsWhy/luci-app-adguardhome.git luci-app-adguardhome
        rm -rf luci-app-adguardhome/.git

        echo "Cloning nas-packages (for ddnsto)..."
        git clone --depth=1 https://github.com/linkease/nas-packages.git _nas-packages
        cp -R _nas-packages/network/services/ddnsto ./ddnsto

        echo "Cloning nas-packages-luci (for luci-app-ddnsto)..."
        git clone --depth=1 https://github.com/linkease/nas-packages-luci.git _nas-packages-luci
        cp -R _nas-packages-luci/luci/luci-app-ddnsto ./luci-app-ddnsto

        echo "Cloning luci-app-lucky..."
        git clone --depth=1 https://github.com/gdy666/luci-app-lucky.git _luci-app-lucky
        cp -R _luci-app-lucky/luci-app-lucky ./luci-app-lucky
        cp -R _luci-app-lucky/lucky ./lucky

        echo "Cloning luci-app-mosdns..."
        git clone --depth=1 https://github.com/sbwml/luci-app-mosdns.git _luci-app-mosdns
        cp -R _luci-app-mosdns/luci-app-mosdns ./luci-app-mosdns
        cp -R _luci-app-mosdns/v2dat ./v2dat

        echo "Cloning aliyundrive-webdav..."
        git clone --depth=1 https://github.com/messense/aliyundrive-webdav.git _aliyundrive-webdav
        cp -R _aliyundrive-webdav/openwrt/aliyundrive-webdav ./aliyundrive-webdav
        cp -R _aliyundrive-webdav/openwrt/luci-app-aliyundrive-webdav ./luci-app-aliyundrive-webdav

        echo "Cleaning up cloned repos..."
        rm -rf _* # 删除所有带下划线的临时仓库目录

        echo "Source packages prepared successfully."
      shell: bash

    - name: Sync package folder to upstream repo
      if: success() # 仅在上一步成功时运行
      env:
        PACKAGE_SOURCE: /home/runner/temp_packages/
      run: |
        cd ${GITHUB_WORKSPACE}
        
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"

        echo "Syncing from $PACKAGE_SOURCE to ${GITHUB_WORKSPACE}/"
        
        # --------------------------------------------------------
        # 修复 2A: 增加 --exclude=".github"
        rsync -rcl --delete \
          --exclude=".git*" \
          --exclude="README.md" \
          --exclude=".github" \
          "$PACKAGE_SOURCE" ./
        # --------------------------------------------------------

        # 检查是否有实际变更
        if ! git diff --quiet || ! git diff --staged --quiet; then
           echo "Changes detected by git, committing and pushing..."
           git add .
           if ! git diff --staged --quiet; then
             git commit -m "Sync package folder from Actions - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
             git push origin main
           else
             echo "No staged changes to commit after git add."
           fi
        else
           echo "No changes detected by git status after rsync."
        fi

        # 清理临时目录
        rm -rf "$PACKAGE_SOURCE"

    - name: Delete old workflow runs
      # 'if: always()' 确保即使同步失败，也会执行清理
      if: always() 
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 3
        keep_minimum_runs: 2
