<%+cbi/valueheader%>
<%-- Include CodeMirror resources --%>
<script type="text/javascript" src="<%=resource%>/codemirror/lib/codemirror.js"></script>
<link rel="stylesheet" href="<%=resource%>/codemirror/lib/codemirror.css" />
<script type="text/javascript" src="<%=resource%>/codemirror/mode/yaml/yaml.js"></script>
<link rel="stylesheet" href="<%=resource%>/codemirror/theme/dracula.css" />
<link rel="stylesheet" href="<%=resource%>/codemirror/addon/fold/foldgutter.css" />
<script type="text/javascript" src="<%=resource%>/codemirror/addon/fold/foldcode.js"></script>
<script type="text/javascript" src="<%=resource%>/codemirror/addon/fold/foldgutter.js"></script>
<script type="text/javascript" src="<%=resource%>/codemirror/addon/fold/indent-fold.js"></script>

<%-- Textarea generated by LuCI --%>
<textarea <%= attr("id", cbid) .. attr("name", cbid) .. attr("style", "width:100%") .. ifattr(self.placeholder, "placeholder") .. ifattr(self.rows, "rows") %>
<%= self:cfgvalue(section) or self.default or "" %></textarea>

<script type="text/javascript">//<![CDATA[
	var editorInstance = null; // Store editor instance

	// Initialize CodeMirror once the DOM is ready
	document.addEventListener('DOMContentLoaded', function() {
		var textarea = document.getElementById('<%=cbid%>');
		if (textarea) {
			editorInstance = CodeMirror.fromTextArea(textarea, {
				mode: "text/yaml",
				styleActiveLine: true,
				lineNumbers: true,
				theme: "dracula",
				lineWrapping: true,
				foldGutter: true,
				gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
				matchBrackets: true
			});
		} else {
			console.error("Textarea element not found for CodeMirror initialization.");
		}
	});

	// URLs
	var reloadUrl = '<%=luci.dispatcher.build_url("admin", "services", "AdGuardHome", "reloadconfig")%>';
	var templateUrl = '<%=luci.dispatcher.build_url("admin", "services", "AdGuardHome", "gettemplateconfig")%>';

	function reload_config() {
		L.Request.get(reloadUrl)
			.then(function(response) {
				// Reload the current page after backend confirms temp file removal
				window.location.reload();
			})
			.catch(function(error) {
				console.error("Error reloading config view:", error);
				alert("<%:Error reloading view: %>" + error.statusText);
			});
		return false; // Prevent default button action
	}

	function use_template() {
		if (!editorInstance) {
			alert("<%:Editor not initialized yet.%>");
			return false;
		}

		L.Request.get(templateUrl)
			.then(function(response) {
				if (response) {
					// Assuming the response text is the template content
					editorInstance.setValue(response);
				} else {
					alert("<%:Received empty template content.%>");
				}
			})
			.catch(function(error) {
				console.error("Error getting template config:", error);
				alert("<%:Error loading template: %>" + error.statusText);
			});
		return false; // Prevent default button action
	}
//]]>
</script>
<% local fs = require "nixio.fs" %>
<% local tmp_exists, _ = pcall(fs.access, "/tmp/AdGuardHometmpconfig.yaml") %>
<% if tmp_exists then %>
	<input type="button" class="cbi-button cbi-button-reset" value="<%:Discard Changes%>" onclick="return reload_config()" />
<% end %>
<input type="button" class="cbi-button cbi-button-apply" value="<%:Use template%>" onclick="return use_template()" />
<%+cbi/valuefooter%>